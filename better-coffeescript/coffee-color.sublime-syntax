%YAML 1.2
---
name: CoffeeScript
comment: "CoffeeScript Syntax"
file_extensions:
  - coffee
  - Cakefile
  - coffee.erb
  - cson
  - cjsx
first_line_match: ^#!.*\bcoffee
scope: source.coffee
contexts:
  main:
    - match: |-
        (\.)(apply|bind|call|isGenerator|toString|concat|copyWithin|entries|every|fill|filter|find|findIndex|flat|flatMap|forEach|includes|indexOf|join|keys|lastIndexOf|map|pop|push|reduce|reduceRight|reverse|shift|slice|some|sort|splice|toLocaleString|toSource|toString|unshift|values)\b
      comment: express and mocha
      captures:
        1: bred
        2: entity.name.function.coffee
    - match: |-
        ^\s*(describe|it|app)(\.)(get|post|put|all|del|delete) ([^,]+)
      comment: express and mocha
      captures:
        1: bblue
        2: bred
        3: entity.name.function.coffee
    - match: |-
        \b(Object)(\.)(hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|toSource|toString|unwatch|valueOf|watch|assign|create|defineProperties|defineProperty|entries|freeze|fromEntries|getNotifier|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|keys|observe|preventExtensions|seal|setPrototypeOf|unobserve|values)\b
      comment: object
      captures:
        1: bblue
        2: bred
        3: entity.name.function.coffee
    - match: |-
        (_)(\.)(chunk|compact|concat|difference|differenceBy|differenceWith|drop|dropRight|dropRightWhile|dropWhile|fill|findIndex|findLastIndex|first |flatten|flattenDeep|flattenDepth|fromPairs|head|indexOf|initial|intersection|intersectionBy|intersectionWith|join|last|lastIndexOf|nth|pull|pullAll|pullAllBy|pullAllWith|pullAt|remove|reverse|slice|sortedIndex|sortedIndexBy|sortedIndexOf|sortedLastIndex|sortedLastIndexBy|sortedLastIndexOf|sortedUniq|sortedUniqBy|tail|take|takeRight|takeRightWhile|takeWhile|union|unionBy|unionWith|uniq|uniqBy|uniqWith|unzip|unzipWith|without|xor|xorBy|xorWith|zip|zipObject|zipObjectDeep|zipWith|countBy|each |eachRight |every|filter|find|findLast|flatMap|flatMapDeep|flatMapDepth|forEach|forEachRight|groupBy|includes|invokeMap|keyBy|map|orderBy|partition|reduce|reduceRight|reject|sample|sampleSize|shuffle|size|some|sortBy|now|after|ary|before|bind|bindKey|curry|curryRight|debounce|defer|delay|flip|memoize|negate|once|overArgs|partial|partialRight|rearg|rest|spread|throttle|unary|wrap|castArray|clone|cloneDeep|cloneDeepWith|cloneWith|conformsTo|eq|gt|gte|isArguments|isArray|isArrayBuffer|isArrayLike|isArrayLikeObject|isBoolean|isBuffer|isDate|isElement|isEmpty|isEqual|isEqualWith|isError|isFinite|isFunction|isInteger|isLength|isMap|isMatch|isMatchWith|isNaN|isNative|isNil|isNull|isNumber|isObject|isObjectLike|isPlainObject|isRegExp|isSafeInteger|isSet|isString|isSymbol|isTypedArray|isUndefined|isWeakMap|isWeakSet|lt|lte|toArray|toFinite|toInteger|toLength|toNumber|toPlainObject|toSafeInteger|toString|add|ceil|divide|floor|max|maxBy|mean|meanBy|min|minBy|multiply|round|subtract|sum|sumBy|clamp|inRange|random|assign|assignIn|assignInWith|assignWith|at|create|defaults|defaultsDeep|entries |entriesIn |extend |extendWith |findKey|findLastKey|forIn|forInRight|forOwn|forOwnRight|functions|functionsIn|get|has|hasIn|invert|invertBy|invoke|keys|keysIn|mapKeys|mapValues|merge|mergeWith|omit|omitBy|pick|pickBy|result|set|setWith|toPairs|toPairsIn|transform|unset|update|updateWith|values|valuesIn|chain|tap|thru|camelCase|capitalize|deburr|endsWith|escape|escapeRegExp|kebabCase|lowerCase|lowerFirst|pad|padEnd|padStart|parseInt|repeat|replace|snakeCase|split|startCase|startsWith|template|toLower|toUpper|trim|trimEnd|trimStart|truncate|unescape|upperCase|upperFirst|words|attempt|bindAll|cond|conforms|constant|defaultTo|flow|flowRight|identity|iteratee|matches|matchesProperty|method|methodOf|mixin|noConflict|noop|nthArg|over|overEvery|overSome|property|propertyOf|range|rangeRight|runInContext|stubArray|stubFalse|stubObject|stubString|stubTrue|times|toPath|uniqueId)
      comment: common functions
      captures:
        1: bblue
        2: bred
        3: entity.name.function.coffee
    - match: |-
        (?x)\b(
          Array|ArrayBuffer|Blob|Boolean|Date|document|event|Float(32|64)Array|Function|Int(8|16|32|64)Array|Math|Map|Number|Object|Proxy|RegExp|Set|String|WeakMap|window|Uint(8|16|32|64)Array|XMLHttpRequest|Symbol
        )\b
      comment: common clasee
      scope: bblue
    - match: |-
        \$(commit|router|data|props|el|options|parent|root|children|slots|scopedSlots|refs|isServer|attrs|listeners|watch|set|delete|once|on|off|emit|mount|forceUpdate|nextTick|destroy|store|route)
      comment: common vue operators
      scope: entity.name.function.coffee
    - match: |-
        \b(import|from|require)\b
      scope: green
    - match: |-
        \b(await|module.exports|exports|export default|export)\b
      scope: i.bred
    - match: \b[A-Z][A-Z0-9_]*\b
      comment: constant
      scope: myConstant
    - match: |-
        (\([^()]*?\))\s*([=-]>)
      comment: "function ie. ->"
      scope: bblue
      captures:
        1: orange
        2: bblue
    - match: ([=-]>)
      scope: bblue
    - match: console\.(assert|table|debug|warn|info|log|error|warn|count|time|timeEnd|assert)
      captures:
        1: bblue
    - match: (new)\s+((?!class)\w+(?:\.\w*)*)
      scope: meta.class.instance.constructor
      comment: initiaize a new object
      captures:
        1: bred
        2: bblue
    - match: "'''"
      captures:
        0: string
      push:
        - meta_scope: string
        - match: "'''"
          captures:
            0: string
          pop: true
    - match: '"""'
      captures:
        0: string
      push:
        - meta_scope: string
        - match: '"""'
          captures:
            0: string
          pop: true
        - match: \\.
          scope: string
        - include: interpolated_coffee
    - match: "`"
      captures:
        0: string
      push:
        - meta_scope: string
        - match: "`"
          captures:
            0: string
          pop: true
        - match: '\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
          scope: string
    - match: (?<!#)###(?!#)
      comment: comments block
      captures:
        0: comment
      push:
        - meta_scope: comment.block.coffee
        - match: '###(?:[ \t]*\n)'
          captures:
            0: comment
          pop: true
        - match: '@\w*'
          scope: storage.type.annotation.coffeescript
    - match: '(#)(?!\{).*$\n?'
      scope: comment
      captures:
        1: comment
    - match: "/{3}"
      push:
        - meta_scope: string.regexp
        - match: "/{3}[imgy]{0,4}"
          pop: true
        - include: interpolated_coffee
        - include: embedded_comment
    - match: '/(?![\s=/*+{}?])(\\.|.)*?/[igmy]{0,4}(?![a-zA-Z0-9])'
      scope: string.regexp
    - match: |-
        (?x)
        \b(?<![\.\$])(
           break|by|catch|continue|else|finally|for|in|of|if|return|yield|switch|
           then|throw|try|unless|when|while|until|loop|do|(?<=for)\s+own
        )(?!\s*:)\b
      comment: control key words
      scope: bred
    - match: |-
        (?x)
        and=|or=|!|%|&|\^|\*|\/|(\-)?\-(?!>)|\+\+|\+|~|==|=(?!>)|!=|<=|>=|<<=|>>=|
        >>>=|<>|<|>|!|&&|\.\.(\.)?|\?|\||\|\||\:|\*=|(?<!\()/=|%=|\+=|\-=|&=|
        \^=|\b(?<![\.\$])(instanceof|new|delete|typeof|and|or|is|isnt|not|super)\b
      comment: operator
      scope: bred
    # - match: '([a-zA-Z\$_](\w|\$|\.)*\s*(?!\::)((:)|(=))(?!(\s*\(.*\))?\s*((=|-)>)))'
    #   scope:
    #   captures:
    #     1: variable.assignment.coffee
    #     4: punctuation.separator.key-value
    #     5: keyword.operator.coffee
    - match: '(?<=\s|^)([\[\{])(?=.*?[\]\}]\s+[:=])'
      captures:
        0: keyword.operator.coffee
      push:
        - meta_scope: meta.variable.assignment.destructured.coffee
        - match: '([\]\}]\s*[:=])'
          captures:
            0: keyword.operator.coffee
          pop: true
        - include: variable_name
        - include: instance_variable
        - include: single_quoted_string
        - include: double_quoted_string
        - include: numeric
    - match: |-
        (?x)
        (\s*)
        (?=[a-zA-Z\$_@])
        (
          [a-zA-Z\$_@](\w|\$|:|\.)*\s*
          (?=[=]( (\s*.\( ($)) | (\s*\(.*\) )?\s*([=-]>)))
        )
      scope: meta.function.coffee
      comment: declaring a function ie. "add = () ->"
      captures:
        2: entity.name.function.coffee
        3: entity.name.function.coffee
        4: variable.parameter.function.coffee
        5: storage.type.function.coffee
    - match: "[=-]>"
      comment: arrow method function
      scope: b.bblue
    - match: \b(Infinity|NaN|undefined)\b
      scope: purple
    - match: '\b(?<!\.)(null|true|on|yes|false|off|no)(?!\s*[:=])\b'
      scope: purple
    - match: '\b(?<!\.)(this|extends)(?!\s*[:=])\b'
      scope: bblue
    - match: '(class\b)\s+((?!extends)@?[a-zA-Z\$_][\w\.]*)?(?:\s*(extends)\s+(@?[a-zA-Z\$\._][\w\.]*))?'
      comment: class definition
      scope: meta.class.coffee
      captures:
        1: storage.type.class.coffee
        2: entity.name.type.class.coffee
        3: keyword.control.inheritance.coffee
        4: entity.other.inherited-class.coffee
    - match: |-
        (?x)\b(
           decodeURI(Component)?|encodeURI(Component)?|eval|parse(Float|Int)|require
        )\b
      scope: bblue
    - match: |-
        (?x)((?<=Array\.)(
           isArray
        ))\b
      scope: support.function.static.array.coffee
    - match: |-
        (?x)((?<=Object\.)(
           create|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|
           getProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)?|
           isnt|keys|preventExtensions|seal
        ))\b
      scope: support.function.static.object.coffee
    - match: |-
        (?x)((?<=Math\.)(
           abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|
           hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|
           tan|tanh|trunc
        ))\b
      scope: support.function.static.math.coffee
    - match: |-
        (?x)((?<=Number\.)(
           is(Finite|Integer|NaN)|toInteger
        ))\b
      scope: support.function.static.number.coffee
    - include: instance_variable
    - include: single_quoted_string
    - include: double_quoted_string
    - include: numeric
  double_quoted_string:
    - match: '"'
      captures:
        0: string
      push:
        - meta_scope: string.quoted.double.coffee
        - match: '"'
          captures:
            0: string
          pop: true
        - match: '\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
          scope: purple
        - include: interpolated_coffee














  embedded_comment:
    - match: (?<!\\)(#).*$\n?
      scope: comment.line.number-sign.coffee
      captures:
        1: comment
  instance_variable:
    - match: '(@)([a-zA-Z_\$]\w*)?'
      scope: variable.other.readwrite.instance.coffee
  interpolated_coffee:
    - match: '\#\{'
      comment: stirng with #{}
      captures:
        0: bred
      push:
        - meta_scope: white
        - match: '\}'
          captures:
            0: bred
          pop: true
        - include: main
    - match: <%
      captures:
        0: bred
      push:
        - meta_scope: source.coffee.embedded.source
        - match: "%>"
          captures:
            0: bred
          pop: true
        - include: main
  numeric:
    - match: '(?<!\$)\b((0([box])[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?(e[+\-]?[0-9]+)?))\b'
      scope: purple
  single_quoted_string:
    - match: "'"
      captures:
        0: string
      push:
        - meta_scope: string
        - match: "'"
          captures:
            0: string
          pop: true
        - match: '\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
          scope: purple
  variable_name:
    - match: '([a-zA-Z\$_]\w*(\.\w+)*)'
      scope: variable.assignment.coffee
      captures:
        1: variable.assignment.coffee
